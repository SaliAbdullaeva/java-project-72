package hexlet.code;

import io.javalin.Javalin;
import lombok.extern.slf4j.Slf4j;

import com.zaxxer.hikari.HikariConfig;
import com.zaxxer.hikari.HikariDataSource;
import hexlet.code.database.DatabaseSetup;

import javax.sql.DataSource;
import java.sql.SQLException;

@Slf4j // –õ–æ–≥–≥–µ—Ä –æ—Ç Lombok, —Å–æ–∑–¥–∞—ë—Ç –ø–æ–ª–µ log
public class App {

    // –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    public static DataSource createDataSource() {
        // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ –∑–∞–¥–∞–Ω–æ (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞/CI)
        String jdbcUrl = System.getenv("JDBC_DATABASE_URL");

        // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è HikariCP
        HikariConfig config = new HikariConfig();

        // –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è JDBC_DATABASE_URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
        if (jdbcUrl != null && !jdbcUrl.isBlank()) {
            // –ü—Ä–æ–¥–∞–∫—à–µ–Ω-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, PostgreSQL —á–µ—Ä–µ–∑ render.com)
            config.setJdbcUrl(jdbcUrl);
            // –õ–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –±–µ—Ä—É—Ç—Å—è –ø—Ä—è–º–æ –∏–∑ —Å—Ç—Ä–æ–∫–∏, –æ—Ç–¥–µ–ª—å–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
        } else {
            // –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞: –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–∞—è –±–∞–∑–∞ H2 –≤ –ø–∞–º—è—Ç–∏
            config.setJdbcUrl("jdbc:h2:mem:project;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false");
            config.setDriverClassName("org.h2.Driver"); // –£–∫–∞–∑—ã–≤–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä H2
            config.setUsername("sa");                   // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ª–æ–≥–∏–Ω H2
            config.setPassword("");                     // –ü—É—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤ –ø—É–ª–µ
        config.setMaximumPoolSize(10);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—ã–π –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        return new HikariDataSource(config);
    }

    /*–°–æ–∑–¥–∞–Ω–∏–µ DataSource –¥–æ–ª–∂–Ω–æ –∏–¥—Ç–∏ –¥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã ‚Äî
    –∏–Ω–∞—á–µ DatabaseSetup –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ–∫—É–¥–∞ –∫–æ–Ω–Ω–µ–∫—Ç–∏—Ç—å—Å—è.*/


    // –°–æ–∑–¥–∞—ë—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Javalin-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –±–∞–∑–æ–≤—ã–º —Ä–æ—É—Ç–æ–º
    public static Javalin getApp(DataSource dataSource) {
        Javalin app = Javalin.create(config -> {
            config.staticFiles.add("/"); // –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏–∫–∏ –∏–∑ resources/public
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ GET-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∫–æ—Ä–µ–Ω—å ("/")
        app.get("/", ctx -> ctx.result("Hello, World!"));

        return app;
    }

    // –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    public static void main(String[] args) {
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –±–µ—Ä—ë–º 7000 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        String portEnv = System.getenv().getOrDefault("PORT", "7000");
        int port = Integer.parseInt(portEnv);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        DataSource dataSource = createDataSource();

        // üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã: —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∏ –ø—Ä–æ—á–µ–≥–æ
        // –∏–ª–∏ –º–µ—Ö–∞–Ω–∏–∑–º –º–∏–≥—Ä–∞—Ü–∏–π –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ö–µ–º—ã
        try {
            DatabaseSetup.initialize(dataSource);
        } catch (SQLException e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", e);
            return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –∑–∞–ø—É—Å–∫, –µ—Å–ª–∏ –±–∞–∑–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∞—Å—å
        }
        /* –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–æ–ª–∂–Ω–∞ –∏–¥—Ç–∏ –¥–æ —Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ ‚Äî
        –∏–Ω–∞—á–µ Javalin –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –±–µ–∑ –≥–æ—Ç–æ–≤–æ–π –±–∞–∑—ã, –∏ –∑–∞–ø—Ä–æ—Å—ã –±—É–¥—É—Ç —Ñ–µ–π–ª–∏—Ç—å—Å—è.*/

        // –°–æ–∑–¥–∞—ë–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Javalin-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        Javalin app = getApp(dataSource);
        app.start(port);

        // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—É—Å–∫
        log.info("Server started on http://localhost:{}", port);
    }
}
